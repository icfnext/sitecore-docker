{
    "Parameters": {
        "Package": {
            "Type": "string",
            "Description": "The path to the Web Deploy package to deploy.",
            "DefaultValue": ""
        },
        "LicenseFile": {
            "Type": "string",
            "Description": "The path to the Sitecore license file.",
            "DefaultValue": ".\\License.xml"
        },
        "SiteName": {
            "Type": "string",
            "DefaultValue": "XConnectMarketingAutomation",
            "Description": "The name of the site to be deployed."
        },
        "SSLCert": {
            "Type": "string",
            "Description": "The certificate to use for HTTPS web bindings. Provide the name or the thumbprint. If not provided a certificate will be generated.",
            "DefaultValue": ""
        },
        "XConnectCert": {
            "Type": "string",
            "Description": "The certificate to use for encryption. Provide the name or the thumbprint.",
            "DefaultValue": ""
        },
        "SqlDbPrefix": {
            "Type": "string",
            "Description": "The prefix used for all Sql databases.",
            "DefaultValue": ""
        },
        "SqlCollectionUser": {
            "Type": "string",
            "DefaultValue": "collectionuser",
            "Description": "The Sql admin user account to use when installing databases."
        },
        "SqlCollectionPassword": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql admin password to use when installing databases."
        },
        "SqlAdminUser": {
            "Type": "string",
            "DefaultValue": "sa",
            "Description": "The Sql admin user account to use when installing databases."
        },
        "SqlAdminPassword": {
            "Type": "string",
            "DefaultValue": "12345",
            "Description": "The Sql admin password to use when installing databases."
        },
        "SqlProcessingPoolsUser": {
            "Type": "string",
            "DefaultValue": "poolsuser",
            "Description": "The Sql user for the Processing Pools connection string in Sitecore."
        },
        "SqlProcessingPoolsPassword": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql password for the Processing Pools connection string in Sitecore."
        },
        "SqlReferenceDataUser": {
            "Type": "string",
            "DefaultValue": "referencedatauser",
            "Description": "The Sql user for the Reference Data connection string in Sitecore."
        },
        "SqlReferenceDataPassword": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql password for the Reference Data connection string in Sitecore."
        },
        "SqlMarketingAutomationUser": {
            "Type": "string",
            "DefaultValue": "marketingautomationuser",
            "Description": "The Sql user for the Marketing Automation connection string in Sitecore."
        },
        "SqlMarketingAutomationPassword": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql password for the Marketing Automation connection string in Sitecore."
        },
        "SqlMessagingUser": {
            "Type": "string",
            "DefaultValue": "messaginguser",
            "Description": "The Sql user for the Messaging connection string in Sitecore."
        },
        "SqlMessagingPassword": {
            "Type": "string",
            "DefaultValue": "SIF-Default",
            "Description": "The Sql password for the Messaging connection string in Sitecore."
        },
        "SqlServer": {
            "Type": "string",
            "DefaultValue": ".\\SQLSERVER",
            "Description": "The Sql Server where databases will be installed."
        },
        "XConnectCollectionSearchService": {
            "Type": "string",
            "DefaultValue": "https://XConnectCollectionSearch",
            "Description": "The url for the XConnect Collection Search Service."
        },
        "XConnectReferenceDataService": {
            "Type": "string",
            "DefaultValue": "https://XConnectReferenceData",
            "Description": "The url for the XConnect Collection Search Service."
        },
        "XConnectEnvironment": {
            "Type": "string",
            "DefaultValue": "Development",
            "Description": "The configuration environment for this instance."
        },
        "XConnectLogLevel": {
            "Type": "string",
            "DefaultValue": "Information",
            "Description": "The level of log information to output."
        },
        "HostMappingName": {
            "Type": "string",
            "Reference": "SiteName",
            "Description": "The host mapping name of the site."
        },
        "DnsName" :{
            "Type": "string",
            "Reference": "SiteName",
            "Description": "The dns name of the site."
        }
    },
    "Variables": {
        "Sql.Database.ShardMapManager": "[concat(parameter('SqlDbPrefix'), '_Xdb.Collection.ShardMapManager')]",
        "Sql.Database.Marketing": "[concat(parameter('SqlDbPrefix'), '_MarketingAutomation')]",
        "Sql.Database.Messaging": "[concat(parameter('SqlDbPrefix'), '_Messaging')]",
        "Sql.Database.Pools": "[concat(parameter('SqlDbPrefix'), '_Processing.Pools')]",
        "Sql.Database.Reference": "[concat(parameter('SqlDbPrefix'), '_ReferenceData')]",

        "SqlMarketingAutomation.Password": "[parameter('SqlMarketingAutomationPassword')]",
        "SqlMessaging.Password": "[parameter('SqlMessagingPassword')]",
        "SqlProcessingPools.Password": "[parameter('SqlProcessingPoolsPassword')]",
        "SqlCollection.Password": "[parameter('SqlCollectionPassword')]",

        "SqlReferenceData.Password": "[parameter('SqlReferenceDataPassword')]",

        "SqlCollection.User": "[parameter('SqlCollectionUser')]",

        "Site.PhysicalPath": "[joinpath(environment('SystemDrive'), 'inetpub', 'wwwroot', parameter('SiteName'))]",
        "Site.DataFolder": "[joinpath(variable('Site.PhysicalPath'), 'App_Data')]",

        "Services.MarketingAutomationEngine.InstallPath": "[joinpath(variable('Site.DataFolder'), 'jobs','continuous','AutomationEngine')]",
        "Services.MarketingAutomationEngine.Name": "[concat(parameter('SiteName'), '-engine')]",

        "Endpoint.Collection": "[parameter('XConnectCollectionSearchService')]",

        "Endpoint.ReferenceData": "[concat(parameter('XConnectReferenceDataService'), '/refdata')]"
    },
    "Register": {
        "Tasks": {
            "RemoveItem": "Remove-Item"
        }
    },
    "Tasks": {
        "CreatePaths": {
            "Description": "Ensure the destination path for the site exists.",
            "Type": "EnsurePath",
            "Params": {
                "Exists": [ "[variable('Site.PhysicalPath')]" ]
            }
        },
        "CreateAppPool": {
            "Description": "Creates or updates the app pool.",
            "Type": "AppPool",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Properties": {
                    "ProcessModel": {
                        "identityType" : "ApplicationPoolIdentity"
                    }
                }
            }
        },
        "CreateWebsite": {
            "Description": "Creates or updates the IIS website instance.",
            "Type": "Website",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "ApplicationPool": "[parameter('SiteName')]",
                "PhysicalPath": "[variable('Site.PhysicalPath')]"
            }
        },
        "StopWebsite": {
            "Description": "Stops the website if it is running.",
            "Type": "ManageWebsite",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Action": "Stop"
            }
        },
        "StopAppPool": {
            "Description": "Stops the app pool if it is running.",
            "Type": "ManageAppPool",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Action": "Stop"
            }
        },
        "StopService": {
            "Description": "Stops the service if it is running.",
            "Type": "ManageService",
            "Params":{
                "Name": "[variable('Services.MarketingAutomationEngine.Name')]",
                "Status": "Stopped",
                "PostDelay": 3000
            }
        },
        "RemoveService": {
            "Description": "Removes the current service.",
            "Type": "RemoveService",
            "Params":{
                "Name":"[variable('Services.MarketingAutomationEngine.Name')]"
            }
        },
        "RemoveDefaultBinding": {
            "Description": "Removes the default *:80 web binding",
            "Type": "WebBinding",
            "Params": {
                "SiteName" : "[parameter('SiteName')]",
                "Remove" : [ { "Port": "80", "IPAddress": "*" } ]
            }
        },
        "SetClientCertificatePermissions": {
            "Type": "WebsiteClientCert",
            "Params": {
                "SiteName": "[parameter('SiteName')]",
                "Setting": "Accept"
            }
        },
        "CreateHostHeader": {
            "Description": "Sets a hostheader for the website.",
            "Type": "HostHeader",
            "Params": {
                "HostName": "[parameter('HostMappingName')]"
            },
            "Skip": "[not(parameter('HostMappingName'))]"
        },
        "SetPermissions": {
            "Description": "Sets permissions for the app pool user.",
            "Type": "FilePermissions",
            "Params": {
                "Path" : "[variable('Site.PhysicalPath')]",
                "Rights": [
                    {
                        "User": "[concat('IIS AppPool\\', parameter('SiteName'))]",
                        "FileSystemRights": "FullControl",
                        "InheritanceFlags": [ "ContainerInherit", "ObjectInherit"]
                    }
                ]
            }
        },
        "InstallWDP": {
            "Description": "Syncs the web deploy package with the website.",
            "Type": "WebDeploy",
            "Params" : {
                "Verb": "Sync",
                "Arguments": {
                    "Source": { "Package": "[resolvepath(parameter('Package'))]" },
                    "Dest": "Auto",
                    "Skip": [
                        { "ObjectName": "dbDacFx" },
                        { "ObjectName": "dbFullSql" }
                    ],
                    "Verbose": "Verbose",
                    "SetParam":  [
                        { "Name": "IIS Web Application Name", "Value":  "[parameter('SiteName')]" },
                        { "Name": "License Xml", "Value": "[parameter('LicenseFile')]" },
                        { "Name": "Database Server Name", "Value": "[parameter('SqlServer')]" },
                        { "Name": "Database Admin User Name", "Value": "[parameter('SqlAdminUser')]" },
                        { "Name": "Database Admin User Password", "Value": "[parameter('SqlAdminPassword')]" },
                        { "Name": "Collection Database Server Name", "Value": "[parameter('SqlServer')]" },
                        { "Name": "Collection Shard Map Manager Database Name", "Value":  "[variable('Sql.Database.ShardMapManager')]" },
                        { "Name": "Collection Database Application User Name", "Value":  "[variable('SqlCollection.User')]" },
                        { "Name": "Collection Database Application User Password", "Value":  "[variable('SqlCollection.Password')]" },
                        { "Name": "Processing Pools Database Name", "Value":  "[variable('Sql.Database.Pools')]" },
                        { "Name": "Processing Pool Database Application User Name", "Value":  "[parameter('SqlProcessingPoolsUser')]" },
                        { "Name": "Processing Pool Database Application User Password", "Value":  "[variable('SqlProcessingPools.Password')]" },
                        { "Name": "Marketing Automation Database Name", "Value":  "[variable('Sql.Database.Marketing')]" },
                        { "Name": "Messaging Database Name", "Value":  "[variable('Sql.Database.Messaging')]" },
                        { "Name": "Reference Data Database Name", "Value":  "[variable('Sql.Database.Reference')]" },
                        { "Name": "Reference Data Database Application User Name", "Value":  "[parameter('SqlReferenceDataUser')]" },
                        { "Name": "Reference Data Database Application User Password", "Value":  "[variable('SqlReferenceData.Password')]" },
                        { "Name": "Marketing Automation Database Application User Name", "Value":  "[parameter('SqlMarketingAutomationUser')]" },
                        { "Name": "Marketing Automation Database Application User Password", "Value":  "[variable('SqlMarketingAutomation.Password')]" },
                        { "Name": "Messaging Database Application User Name", "Value":  "[parameter('SqlMessagingUser')]" },
                        { "Name": "Messaging Database Application User Password", "Value":  "[variable('SqlMessaging.Password')]" },
                        { "Name": "XConnect Server Configuration Environment", "Value":  "[parameter('XConnectEnvironment')]" },
                        { "Name": "XConnect Server Certificate Validation Thumbprint", "Value":  "HARD_CODED_THUMBPRINT" },
                        { "Name": "XConnect Server Log Level", "Value":  "[parameter('XConnectLogLevel')]" },
                        { "Name": "Marketing Automation Engine Xconnect Collection Client Endpoint", "Value": "[variable('Endpoint.Collection')]" },
                        { "Name": "Marketing Automation Engine Xconnect Collection Client Certificate Thumbprint", "Value": "HARD_CODED_THUMBPRINT" },
                        { "Name": "Marketing Automation Engine Xdb Reference Data Endpoint", "Value": "[variable('Endpoint.ReferenceData')]" },
                        { "Name": "Marketing Automation Engine Xdb Reference Data Client Certificate Thumbprint", "Value": "HARD_CODED_THUMBPRINT" }
                    ]
                }
            }
        },
        "SetLicense" : {
            "Description": "Copies the license file to the instance data folder.",
            "Type": "Copy",
            "Params": {
                "Source": "[resolvepath(parameter('LicenseFile'))]",
                "Destination": "[variable('Site.DataFolder')]"
            }
        },
        "CreateServiceLogPath": {
            "Description": "Ensure the destination path for the site exists.",
            "Type": "EnsurePath",
            "Params": {
                "Exists": [ "[joinpath(variable('Services.MarketingAutomationEngine.InstallPath'), 'App_Data', 'Logs')]" ]
            }
        },
        "SetMarketingAutomationServiceLicense" : {
            "Description": "Copies the license file to the marketing automation service data folder.",
            "Type": "Copy",
            "Params": {
                "Source": "[resolvepath(parameter('LicenseFile'))]",
                "Destination": "[joinpath(variable('Services.MarketingAutomationEngine.InstallPath'), 'App_Data')]"
            }
        },
        "SetServicePermissions": {
            "Description": "Set permissions for the service.",
            "Type": "FilePermissions",
            "Params": {
                "Path" : "[joinpath(variable('Services.MarketingAutomationEngine.InstallPath'), 'App_Data', 'Logs')]",
                "Rights": [
                    {
                        "User": "NT AUTHORITY\\LocalService",
                        "FileSystemRights": ["FullControl"],
                        "InheritanceFlags": [ "ContainerInherit", "ObjectInherit"]
                    }
                ]
            }
        },
        "InstallService": {
            "Description": "Installs the service.",
            "Type": "Command",
            "Params": {
                "Path": "[joinpath(variable('Services.MarketingAutomationEngine.InstallPath'), 'maengine.exe')]",
                "Arguments": ["-i", "[variable('Services.MarketingAutomationEngine.Name')]"]
            }
        }
    },
    "UninstallTasks": {
        "StopService": {
            "Description": "Stops the service if it is running.",
            "Type": "ManageService",
            "Params":{
                "Name": "[variable('Services.MarketingAutomationEngine.Name')]",
                "Status": "Stopped",
                "PostDelay": 3000
            }
        },
        "RemoveService": {
            "Description": "Removes the current service.",
            "Type": "RemoveService",
            "Params":{
                "Name":"[variable('Services.MarketingAutomationEngine.Name')]"
            }
        },
        "StopWebsite": {
            "Description": "Stops the website if it is running.",
            "Type": "ManageWebsite",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Action": "Stop",
                "ErrorAction": "SilentlyContinue"
            }
        },
        "StopAppPool": {
            "Description": "Stops the app pool if it is running.",
            "Type": "ManageAppPool",
            "Params": {
                "Name": "[parameter('SiteName')]",
                "Action": "Stop",
                "ErrorAction": "SilentlyContinue"
            }
        },
        "RemoveWebsite": {
            "Description": "Removes the IIS website.",
            "Type": "RemoveWebsite",
            "Params": {
                "Name": "[parameter('SiteName')]"
            }
        },
        "RemoveAppPool": {
            "Description": "Removes the IIS application pool.",
            "Type": "RemoveAppPool",
            "Params": {
                "Name": "[parameter('SiteName')]"
            }
        },
        "RemoveContent": {
            "Description": "Removes website content.",
            "Type": "RemoveItem",
            "Params": {
                "Path": "[variable('Site.PhysicalPath')]",
                "Recurse": true,
                "ErrorAction": "SilentlyContinue"
            }
        },
        "RemoveHostHeader": {
            "Description": "Removes the website host name.",
            "Type": "HostHeader",
            "Params": {
                "HostName": "[parameter('SiteName')]",
                "Action": "Remove"
            }
        }
    }
}